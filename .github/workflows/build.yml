on:
  workflow_dispatch:
  push:
    branches:
      - 'dev'
    tags:        
      - 'v*'           # Push events to every tag not containing /

name:  ToMoon Auto Build
permissions:
  contents: write

jobs:
  build_plugin:
    name: Build Plugin
    runs-on: ubuntu-latest
    steps:
      #build tomoon start
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - name: download asset files
        run: wget https://github.com/YukiCoco/ToMoon/releases/download/build/build_assets.zip
      - run: unzip -n build_assets.zip -d tmp/
      # build front-end start
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.12.2
      - name: Install Requestment
        run: | 
             cp -r tmp/usdpl src/
             pnpm i
      - name: build front end
        run: pnpm run build
        working-directory: .
      - name: build external web page
        run: |
              npm i
              npm run build
        working-directory: tomoon-web
      # build front-end end
      # build backend start
      - uses: dtolnay/rust-toolchain@stable
      - uses: ClementTsang/cargo-action@v0.0.2
        with:
          command: build
          directory: ./backend
          args: --target x86_64-unknown-linux-gnu --release
          use-cross: true
          cross-version: 0.2.4
      # build backend end
      #build tomoon stop
      #output: # ToMoon/backend/target/x86_64-unknown-linux-gnu/release/tomoon

      # - uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     target: x86_64-unknown-linux-gnu
      #     override: true
      # - uses: actions-rs/cargo@v1
      #   with:
      #     use-cross: true
      #     command: build
      #     args: --target x86_64-unknown-linux-gnu --release # ToMoon/backend/target/x86_64-unknown-linux-gnu/release/tomoon
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      # - run: pnpm run build
      - name: colect files
        run: |
              mkdir -p ./release/tomoon/bin/core/web
              mkdir -p ./release/tomoon/dist
              cp backend/target/x86_64-unknown-linux-gnu/release/tomoon ./release/tomoon/bin/tomoon
              cp ./dist/index.js ./release/tomoon/dist/index.js
              cp main.py ./release/tomoon/main.py
              cp plugin.json ./release/tomoon/plugin.json
              cp package.json ./release/tomoon/package.json
              cp -r ./tmp/core ./release/tomoon/bin/
              cp -r ./tmp/smartdns ./release/tomoon/bin/
              cp -r ./tomoon-web/dist ./release/tomoon/web
              cp -r ./py_modules ./release/tomoon/py_modules
              cd ./release 
              zip -r tomoon-${{ github.ref_name }}.zip tomoon
              cd ..

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tomoon-${{ github.ref_name }}
          path: ./release/tomoon-${{ github.ref_name }}.zip

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build_plugin
    steps:
      - run: mkdir /tmp/artifacts

      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts

      - run: ls -R /tmp/artifacts

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: publish to github release
        uses: softprops/action-gh-release@v1
        with:
          files: /tmp/artifacts/tomoon-${{ github.ref_name }}/tomoon-${{ github.ref_name }}.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: contains(github.ref, 'pre') || contains(github.ref, '.ci')
